unit DataBase.Generics;

interface

  uses
  UDM,
  System.SysUtils,
  FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.Phys.FBDef,
  FireDAC.VCLUI.Wait, FireDAC.Comp.UI,
  FireDAC.Phys.IBBase, FireDAC.Phys.FB,
  FireDAC.Comp.Client,
  Data.DB, FireDAC.Stan.Param,
  FireDAC.DatS, FireDAC.DApt.Intf,
  FireDAC.DApt, FireDAC.Comp.DataSet ;


  Function TabelaExiste ( NomeTabela : String ) : Boolean;
  Function GeneratorExiste ( NomeGenerator : String ) : Boolean;


implementation


Function GeneratorExiste ( NomeGenerator : String ) : Boolean;
var
  Qry  :TFDQuery;
begin

  Result:=False;

  Qry            := TFDQuery.Create(nil);
  Qry.Connection := DM.Connection;

  try

//    Qry.Sql.Add('SELECT RDB$GENERATOR_NAME FROM RDB$GENERATORS WHERE Upper(RDB$GENERATOR_NAME) = Upper('''+NomeGenerator+''')');
//    Qry.Sql.Add('CREATE SEQUENCE '+LowerCase(NomeGenerator));

//     Qry.Sql.Add('SELECT nextval('+LowerCase(NomeGenerator)+')');
//     Qry.Sql.Add('SELECT nextval('+LowerCase(NomeGenerator)+') ');
Qry.Sql.Add('     SELECT nextval(''pessoa'') ');
    try

      Qry.Open;

      If Qry.RecordCount>0 Then
        Result:=TRUE;

    except

      on E: Exception do begin

        raise Exception.Create(E.Message);
//        Telegram_Send('Phoenix.DataBase.Functions - GeneratorExiste - '+ E.Message);
         Result:=False;

      end;

    end;

  finally
    Qry.Free;
  end;



END;





function TabelaExiste(NomeTabela: String): Boolean;
var
  Qry : TFDQuery;
begin

  Result:=FALSE;

  Qry := TFDQuery.Create(nil);

  Qry.Connection := DM.Connection;

  try

    Qry.Close;
    Qry.SQL.Clear;
    Qry.Sql.Add('SELECT table_name                    ');
    Qry.Sql.Add('FROM information_schema.tables       ');
    Qry.Sql.Add('WHERE table_schema=''public''          ');
    Qry.Sql.Add('AND table_type='+QuotedStr(LowerCase(NomeTabela))+';         ');





    try

      Qry.Open;

      If Qry.RecordCount>0 Then
        Result    := True;

    except

      on E: Exception do begin

//        raise Exception.Create(E.Message);
//        Telegram_Send('Phoenix.DataBase.Functions - TabelaExiste - '+ E.Message);
//        Result:= False;

      end;

    end;

  finally
    Qry.Free;
  end;

end;



end.

